<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>io.simonis</groupId>
  <artifactId>graal-js-test</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
  </properties>

  <profiles>
    <profile>
      <id>graal-23-1-2</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <graalvm.version>23.1.2</graalvm.version>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.graalvm.polyglot</groupId>
          <artifactId>polyglot</artifactId>
          <version>${graalvm.version}</version>
        </dependency>
        <dependency>
          <groupId>org.graalvm.polyglot</groupId>
          <artifactId>js-community</artifactId>
          <version>${graalvm.version}</version>
          <type>pom</type>
        </dependency>
        <dependency>
          <groupId>org.graalvm.truffle</groupId>
          <artifactId>truffle-api</artifactId>
          <version>${graalvm.version}</version>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>graal-23-1-2-isolate</id>
      <build>
        <directory>${basedir}/target-isolate</directory>
      </build>
      <properties>
        <graalvm.version>23.1.2</graalvm.version>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.graalvm.polyglot</groupId>
          <artifactId>polyglot</artifactId>
          <version>${graalvm.version}</version>
        </dependency>
        <dependency>
          <groupId>org.graalvm.polyglot</groupId>
          <artifactId>js</artifactId>
          <version>${graalvm.version}</version>
          <type>pom</type>
        </dependency>
        <dependency>
          <groupId>org.graalvm.polyglot</groupId>
          <artifactId>js-isolate</artifactId>
          <version>${graalvm.version}</version>
          <type>pom</type>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>graal-23-0-2</id>
      <build>
        <directory>${basedir}/target-23-0-2</directory>
      </build>
      <properties>
        <graalvm.version>23.0.2</graalvm.version>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.graalvm.sdk</groupId>
          <artifactId>graal-sdk</artifactId>
          <version>${graalvm.version}</version>
        </dependency>
        <dependency>
          <groupId>org.graalvm.js</groupId>
          <artifactId>js</artifactId>
          <version>${graalvm.version}</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>org.graalvm.compiler</groupId>
      <artifactId>compiler</artifactId>
      <version>${graalvm.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.nashorn</groupId>
      <artifactId>nashorn-core</artifactId>
      <version>15.4</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.1</version>
        <executions>
          <execution>
            <id>js-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
	      <outputDirectory>${project.build.directory}/js-deps</outputDirectory>
	      <excludeTypes>pom</excludeTypes>
	      <excludeGrouIds>org.ow2.asm,org.graalvm.compiler</excludeGrouIds>
              <!-- Unfortunately <excludeGrouIds> doesn't work, so we have to explicitely list all artifact ids -->
	      <excludeArtifactIds>compiler,nashorn-core,asm,asm-commons,asm-tree,asm-util,asm-analysis</excludeArtifactIds>
            </configuration>
          </execution>
          <execution>
            <id>compiler-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
	      <outputDirectory>${project.build.directory}/compiler-deps</outputDirectory>
	      <includeGrouIds>org.graalvm.compiler</includeGrouIds>
	      <includeArtifactIds>compiler</includeArtifactIds>
            </configuration>
          </execution>
          <execution>
            <id>nashorn-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
	      <outputDirectory>${project.build.directory}/nashorn-deps</outputDirectory>
	      <includeGrouIds>org.openjdk.nashorn,org.ow2.asm</includeGrouIds>
              <!-- Unfortunately <includeGrouIds> doesn't work, so we have to explicitely list all artifact ids -->
	      <includeArtifactIds>nashorn-core,asm,asm-commons,asm-tree,asm-util,asm-analysis</includeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>make</id>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo message="Creating test output directory"/>
                <mkdir dir="${project.build.directory}/native"/>
                <exec executable="make" dir="${project.build.directory}/native" failonerror="true">
                  <arg value="-f"/>
                  <arg value="${basedir}/src/main/native/Makefile"/>
                  <arg value="SRC_DIR=${basedir}/src/main/native/cpp"/>
                  <arg value="JAVA_HOME=${java.home}"/>
                </exec>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <useModulePath>true</useModulePath>
          <compilerArgs>
            <!-- I don't know why this empty `_-module-path` works and          -->
            <!-- I don't understand how I can add my project dependencies like  -->
            <!-- "truffle-api" to the java module path insted of the classpath? -->
            <!-- Now I understand!!! The empty `-module-path` arguments works   -->
            <!-- because it actually consumes the following `_-add-modules=..`  -->
            <!-- paramter as its own argument and thus basically compiles with  -->
            <!-- `truffle.jar` on the classpath.                                -->
            <arg>--module-path</arg>
            <arg>--add-modules=org.graalvm.truffle</arg>
          </compilerArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
